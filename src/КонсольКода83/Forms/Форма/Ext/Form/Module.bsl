&НаКлиенте
Перем ПутьФайлаЗапроса;

#Область Коллекции

&НаСервереБезКонтекста
Функция ПолучитьКоллекцию(Объект)
	Тип = ТипЗнч(Объект);
	Если Тип = Тип("ДеревоЗначений") или Тип = Тип("СтрокаДереваЗначений") Тогда
		Возврат Объект.Строки;
	КонецЕсли;
	Возврат Объект;
КонецФункции

&НаСервереБезКонтекста
Процедура СкопироватьСодержимое(Приемник,Источник)	
	ПриемникКоллекция=ПолучитьКоллекцию(Приемник);
	ИсточникКоллекция=ПолучитьКоллекцию(Источник);
	для каждого стр из Источник.Строки цикл
		нСтр=ПриемникКоллекция.Добавить();
		ЗаполнитьЗначенияСвойств(нСтр,стр);
		СкопироватьСодержимое(нСтр,стр);
	КонецЦикла;
КонецПроцедуры
#КонецОбласти

#Область Работа_с_файлами

&НаКлиенте
Функция ВыбратьФайлДляСохранения(Фильтр, Заголовок = Неопределено, ВыбранноеИмяФайла = Неопределено, ВыбранныйКаталог = Неопределено, ВыбранноеРасширение = Неопределено)
	Диалог = новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Фильтр = Фильтр;
	Диалог.ПолноеИмяФайла 	= ВыбранноеИмяФайла;
	Диалог.Каталог 			= ВыбранныйКаталог;
	Диалог.Заголовок 		= Заголовок;
	Диалог.Расширение 		= ВыбранноеРасширение;
	
	Если Диалог.Выбрать() Тогда
		
		Возврат Новый Структура("ИмяФайла, Каталог", Диалог.ПолноеИмяФайла, Диалог.Каталог);

	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ВыбратьФайлДляОткрытия(Фильтр, Заголовок = Неопределено, ВыбранноеИмяФайла = Неопределено, ВыбранныйКаталог = Неопределено, ВыбранноеРасширение = Неопределено)
	Диалог = новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = Фильтр;
	Диалог.ПолноеИмяФайла 	= ВыбранноеИмяФайла;
	Диалог.Каталог 			= ВыбранныйКаталог;
	Диалог.Заголовок 		= Заголовок;
	Диалог.Расширение 		= ВыбранноеРасширение;
		
	Если Диалог.Выбрать() Тогда
		
		Возврат Новый Структура("ИмяФайла, Каталог", Диалог.ПолноеИмяФайла, Диалог.Каталог);
		
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция ЗагрузитьФайлНаСервер(файл)
	Если ПустаяСтрока(файл)Тогда Возврат Неопределено;КонецЕсли;
	Возврат ПоместитьВоВременноеХранилище(новый ДвоичныеДанные(файл),УникальныйИдентификатор);
КонецФункции

&НаСервереБезКонтекста
Функция ПоместитьВФайл(Адрес)
	двДанные = ПолучитьИзВременногоХранилища(Адрес);
	
	Если ТипЗнч(двДанные)=Тип("ДвоичныеДанные") Тогда
		ИмяФайла=ПолучитьИмяВременногоФайла();
		двДанные.Записать(ИмяФайла);
		Возврат ИмяФайла;
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область Редактирование_Текстов

&НаКлиенте
Процедура ОткрытьКонструкторЗапроса(Команда)
	
	ТекстЗапроса = Элементы.ДеревоНастроек.ТекущиеДанные.ТекстЗапроса;
	Контсруктор = Новый КонструкторЗапроса(?(ПустаяСтрока(ТекстЗапроса) ,Неопределено, ТекстЗапроса));

	Контсруктор.Показать(Новый ОписаниеОповещения("ПриЗакрытииКЗ", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииКЗ(Текст, ДополнительныеПараметры) Экспорт 
	Если Текст = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Элементы.ДеревоНастроек.ТекущиеДанные.ТекстЗапроса = Текст;
КонецПроцедуры

#КонецОбласти

#Область Параметры

&НаСервереБезКонтекста
Функция Параметры_ЗаполнитьНаСервере(ТекстЗапроса)
	
	мПараметры = Новый Массив;
	
	Попытка
		Запрос = Новый Запрос(ТекстЗапроса);
	Исключение
		
		Возврат Новый Структура("Выполнено, Описание", Ложь, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Для Каждого Параметр Из Запрос.НайтиПараметры() Цикл 
		
		мПараметры.Добавить(Новый Структура("Имя, ТипЗначения", Параметр.Имя, Параметр.ТипЗначения));
		
	КонецЦикла;
	
	Возврат Новый Структура("Выполнено, Параметры", Истина, мПараметры);
	
КонецФункции

&НаКлиенте
Процедура Параметры_ЗаполнитьНаКлиенте()
	
	ТекстЗапроса = Элементы.ДеревоНастроек.ТекущиеДанные.ТекстЗапроса;
	
	Если ПустаяСтрока(ТекстЗапроса) Тогда 
		Возврат;
	КонецЕсли;
	
	
	Результат = Параметры_ЗаполнитьНаСервере(ТекстЗапроса);
	
	Если НЕ Результат.Выполнено Тогда 
		
		СообщитьОбОшибке(Результат.Описание, "При получении параметров запроса");
		Возврат;
		
	КонецЕсли;
	
	ПараметрыЗапроса = Элементы.ДеревоНастроек.ТекущиеДанные.ПараметрыЗапроса;
	
	Для Каждого Параметр Из Результат.Параметры Цикл 
		
		Строки = ПараметрыЗапроса.НайтиСтроки(Новый Структура("ИмяПараметра", Параметр.Имя));
		
		Если Строки.Количество() = 0 Тогда 
			
			Стр = ПараметрыЗапроса.Добавить();
			Стр.ИмяПараметра = Параметр.Имя;
			
		Иначе
			
			Стр = Строки[0];
			
		КонецЕсли;
		
		Стр.ЗначениеПараметра = Параметр.ТипЗначения.ПривестиЗначение(Стр.ЗначениеПараметра);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти //Параметры

#Область Выполнение
&НаСервере
процедура СоздатьКолонкиТЗ(колонки)
	массивРеквизитов=новый Массив;
	
	для каждого колонка из колонки цикл
		реквизитФормы=новый РеквизитФормы(колонка.Имя,новый ОписаниеТипов(колонка.ТипЗначения,,"NULL"),"РезультатТаблица");
		массивРеквизитов.Добавить(реквизитФормы);
	КонецЦикла;
	ЭтаФорма.ИзменитьРеквизиты(массивРеквизитов);
	
	для каждого колонка из колонки цикл
		имяКолонки="кол"+колонка.Имя;
		колонкаФ=ЭтаФорма.Элементы.Найти(имяКолонки);
		Если колонкаФ=Неопределено Тогда
			колонкаФ=ЭтаФорма.Элементы.Добавить(имяКолонки,Тип("ПолеФормы"),Элементы.РезультатТаблица);
			попытка
				колонкаФ.ПутьКДанным="РезультатТаблица."+колонка.Имя;
			исключение
			КонецПопытки;
		КонецЕсли;
		колонкаФ.Вид=ВидПоляФормы.ПолеВвода;
		колонкаФ.Заголовок=колонка.Заголовок;
	КонецЦикла;
	Элементы.РезультатТаблица_Служебная.Видимость=Ложь;
КонецПроцедуры

&НаСервере
процедура УдалитьКолонки(колонки)
	массивУдаляемыхРеквизитов=новый Массив;	
	для каждого колонка из колонки цикл
		Если колонка.Имя="_Служебная" Тогда Продолжить;КонецЕсли;
		массивУдаляемыхРеквизитов.Добавить("РезультатТаблица."+колонка.Имя);
	КонецЦикла;
	ЭтаФорма.ИзменитьРеквизиты(,массивУдаляемыхРеквизитов);
	для каждого колонка из колонки цикл
		Если колонка.Имя="_Служебная" Тогда Продолжить;КонецЕсли;
		имяКолонки="кол"+колонка.Имя;
		колонкаФ=ЭтаФорма.Элементы.Найти(имяКолонки);
		ЭтаФорма.Элементы.Удалить(колонкаФ);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗапросНаСервере(Текст, ПараметрыВыполнения)
	
	Запрос=новый Запрос(Текст);
	Для каждого п из ПараметрыВыполнения цикл
		Запрос.УстановитьПараметр(п.Ключ, п.Значение);
	КонецЦикла;
	ТЗРез=Запрос.Выполнить().Выгрузить();
	
	ВывестиТаблицу(ТЗРез);
КонецПроцедуры

&НаСервере
Функция ВыполнитьСкриптНаСервере(Текст, ПараметрыВыполнения = Неопределено)
	Результат = Неопределено;
	Выполнить(Текст);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ВыполнитьЗапросСкрипт(Команда)
	
	ЭтоЗапрос = Элементы.ГруппаТексты.ТекущаяСтраница = Элементы.ГруппаЗапрос;
	
	ПараметрыВыполнения = Новый Структура;
	ТекущиеДанные = Элементы.ДеревоНастроек.ТекущиеДанные;
	
	Для каждого стр из ТекущиеДанные.ПараметрыЗапроса цикл
		ПараметрыВыполнения.Вставить(стр.ИмяПараметра, стр.ЗначениеПараметра);
	КонецЦикла;
	
	Если ЭтоЗапрос Тогда 
		
		ВыполнитьЗапросНаСервере(ТекущиеДанные.ТекстЗапроса, ПараметрыВыполнения);
		
	ИначеЕсли ВыполнятьНаКлиенте Тогда
		
		Выполнить(ТекущиеДанные.ТекстАлгоритма);
		
	Иначе
		
		ВыполнитьСкриптНаСервере(ТекущиеДанные.ТекстАлгоритма, ПараметрыВыполнения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Настройки

#Область Команды

&НаКлиенте
Процедура ЗагрузитьНастройки(Команда)
	РезультатВыбора = ВыбратьФайлДляОткрытия("Файлы запросов (*.sel)|*.sel|Все файлы (*.*)|*.*",
		"Укажите файл для списка запросов",
		ИмяФайлаНастроек,
		ПутьФайлаЗапроса,
		"sel"
	);
	Если РезультатВыбора = Неопределено Тогда 
		
		Возврат;
		
	КонецЕсли;
	
	РезультатВыбора.Свойство("ИмяФайла", ИмяФайлаНастроек);
	РезультатВыбора.Свойство("Каталог", ПутьФайлаЗапроса);
	
	Адрес = ЗагрузитьФайлНаСервер(ИмяФайлаНастроек);
	Если НЕ ЭтоАдресВременногоХранилища(Адрес) Тогда 
		Возврат;
	КонецЕсли;
	
	ЗагрузитьНастройкиНаСервере(Адрес);

	Модифицированность = Ложь;
	
	УстановитьЗаголовок();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	
	Если Команда.Имя = "Файл_СохранитьНастройкиКак" ИЛИ ПустаяСтрока(ИмяФайлаНастроек) Тогда 
		РезультатВыбора = ВыбратьФайлДляСохранения("Файлы запросов (*.sel)|*.sel|Все файлы (*.*)|*.*",
			"Укажите файл для списка запросов",
			ИмяФайлаНастроек,
			ПутьФайлаЗапроса,
			"sel"
		);
		
		Если РезультатВыбора = Неопределено Тогда 
			
			Возврат;
			
		КонецЕсли;
		
		РезультатВыбора.Свойство("ИмяФайла", ИмяФайлаНастроек);
		РезультатВыбора.Свойство("Каталог", ПутьФайлаЗапроса);
	КонецЕсли;
	
	Адрес = ПолучитьАдресФайлаНастроек();
	
	ПолучитьФайл(Адрес, ИмяФайлаНастроек, Ложь);
	
	УдалитьИзВременногоХранилища(Адрес);
	
	УстановитьЗаголовок();
	
	Модифицированность = Ложь;
	
	ПоказатьОповещениеПользователя("Настройки сохранены", , ИмяФайлаНастроек);
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗагрузитьНастройкиНаСервере(Адрес)
	ИмяФайла = ПоместитьВФайл(Адрес);	
	Если ИмяФайла=Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	вНастройки=ЗначениеИзФайла(ИмяФайла);
	УдалитьФайлы(ИмяФайла);
	
	Настройки=РеквизитФормыВЗначение("ДеревоНастроек");
	Настройки.Строки.Очистить();
	СкопироватьСодержимое(Настройки,вНастройки);
	ЗначениеВРеквизитФормы(Настройки,"ДеревоНастроек");
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресФайлаНастроек()
	
	ИмяФайла = ПолучитьИмяВременногоФайла();
	СохранитьНастройкиНаСервере(ИмяФайла);
	
	Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайла), УникальныйИдентификатор);
	
	УдалитьФайлы(ИмяФайла);
	
	Возврат Адрес;
КонецФункции

&НаСервере
Функция СохранитьНастройкиНаСервере(ИмяФайла)
	
	ЗначениеВФайл(ИмяФайла, РеквизитФормыВЗначение("ДеревоНастроек"));
	
КонецФункции

#КонецОбласти

#Область Форма

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "КонсольКода_ЗагрузитьИзВременногоХранилища" Тогда 
		Сообщить("Адрес данных: " + Параметр);
		ЗагрузитьИзВременногоХранилищаТаблицу(Параметр);
		
		Если ТипЗнч(Источник) = Тип("УправляемаяФорма") И Источник.Открыта() Тогда 
			Источник.Закрыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовок()
	Заголовок = "Консоль кода" + ?(ПустаяСтрока(ИмяФайлаНастроек), "", ": " + ИмяФайлаНастроек);
КонецПроцедуры

#Область События

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ПустаяСтрока(ИмяФайлаНастроек)Тогда 
		Адрес = ЗагрузитьФайлНаСервер(ИмяФайлаНастроек);
		
		Если ЭтоАдресВременногоХранилища(Адрес) Тогда 
			ЗагрузитьНастройкиНаСервере(Адрес);
		КонецЕсли;
		
	КонецЕсли;
	УстановитьЗаголовок();
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекПриАктивизацииСтроки(Элемент)
	ТекстЗапроса=?(Элементы.ДеревоНастроек.ТекущиеДанные=Неопределено,Неопределено,Элементы.ДеревоНастроек.ТекущиеДанные.ТекстЗапроса);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДеревоНастроек.ПолучитьЭлементы().Добавить();
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура Параметры_Заполнить(Команда)
	Параметры_ЗаполнитьНаКлиенте();
КонецПроцедуры

#КонецОбласти

#Область События_элементов_формы

&НаКлиенте
Процедура СохраняемыеДанныеПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти //События_элементов_формы

#Область Служебные

&НаКлиенте
Процедура СообщитьОбОшибке(ОписаниеОшибки, ОписаниеДействия)
	
	Сообщить(ОписаниеОшибки);
	ПоказатьПредупреждение(, "" + ОписаниеДействия + Символы.ПС + "Возникла ошибка");		
	
КонецПроцедуры // СообщитьОбОшибке

&НаСервереБезКонтекста
Функция ПодключитьВнешнуюОбработкуСервер(Адрес)
	
	Возврат ВнешниеОбработки.Подключить(Адрес);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьИзВременногоХранилищаТаблицу(Адрес)

	Таблица = ПолучитьИзВременногоХранилища(Адрес);
	
	ВывестиТаблицу(Таблица);
	
КонецПроцедуры

&НаСервере
Процедура ВывестиТаблицу(Таблица)
	ТЗРез = РеквизитФормыВЗначение("РезультатТаблица");
	УдалитьКолонки(ТЗРез.Колонки);

	ТЗРез = Таблица;
	
	СоздатьКолонкиТЗ(ТЗРез.Колонки);
	РезультатТаблица.Загрузить(ТЗРез);
	
КонецПроцедуры

#КонецОбласти

#Область  Функции_скрипта_клиент

&НаКлиенте
Функция ПодключитьВнешнуюОбработку(ИмяФайла)
	
	Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайла));
	Возврат ПодключитьВнешнуюОбработкуСервер(Адрес);
	
КонецФункции

&НаКлиенте
Функция ОткрытьВнешнуюОбработку(ИмяФайла, ПараметрыФормы = Неопределено)
	
	Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайла));
	ИмяОбработки = ПодключитьВнешнуюОбработкуСервер(Адрес);
	
	ОткрытьФорму(СтрШаблон("ВнешняяОбработка.%1.Форма", ИмяОбработки), ПараметрыФормы, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецФункции


#КонецОбласти //Функции_скрипта_клиент