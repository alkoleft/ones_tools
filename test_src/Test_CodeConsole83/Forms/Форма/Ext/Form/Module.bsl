&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Ожидаем;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем КонсольКода;

// { интерфейс тестирования

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	
	ФайлЭтойОбработки = Новый Файл(ЭтаФорма.ПутьКФайлуПолный);
	
	КонтекстЯдра.ПодключитьВнешнююОбработку(Новый Файл(ФайлЭтойОбработки.Путь + "\CodeConsole83.epf"));
	
	КонсольКода = ОткрытьФорму("ВнешняяОбработка.CodeConsole83.Форма.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.НачатьГруппу("Функции начала работы", Истина);
	
	НаборТестов.Добавить("ТестДолжен_ПроверитьОткрытиеФормыОбработки", , "Проверка открытие формы");
	НаборТестов.Добавить("ТестДолжен_ПроверитьЗакрытиеФормыОбработки", , "Проверка закрытие формы");
	
	НаборТестов.НачатьГруппу("Функции выполнение базовых функций", Истина);
	
	НаборТестов.Добавить("ТестДолжен_ПроверитьОткрытиеФормыОбработки", , "Проверка открытие формы");
	НаборТестов.Добавить("ТестДолжен_Проверить_УстановкуТекстаЗапроса", , "Проверка установить текст запроса");
	НаборТестов.Добавить("ТестДолжен_Проверить_ТекущаяСтрокаВыбрата", , "Проверка текущая строка выбрана");
	НаборТестов.Добавить("ТестДолжен_Проверить_ВыполнениеЗапроса", , "Проверка выполнить запрос").Параметры.Добавить(1);
	
	
	НаборТестов.Добавить("ТестДолжен_Проверить_Настройки_ДобавитьСкрипт", , "Проверка добавить скрипт");
	НаборТестов.Добавить("ТестДолжен_Проверить_ВыполнитьСкрипт", , "Проверка выполнить скрипт");
	
	НаборТестов.Добавить("ТестДолжен_Проверить_Настройки_ДобавитьЗапрос", , "Проверка добавить запрос");
	НаборТестов.Добавить("ТестДолжен_Проверить_ИзвлечьПараметры", , "Проверка извлечь параметры запроса");
	НаборТестов.Добавить("ТестДолжен_Проверить_ВыполнениеЗапроса", , "Проверка выполнить запрос").Параметры.Добавить(3);
	
	НаборТестов.Добавить("ТестДолжен_Проверить_ВыводСпискаВременныхТаблиц", , "Проверка вывод списка временных таблиц");
	
	НаборТестов.ДобавитьДеструктор("ДеструкторСценария", "Обязательное завершение сценария");
	
	НаборТестов.НачатьГруппу("Функции начала работы", Истина);
	//НаборТестов.Добавить("ТестДолжен_ПроверитьЗакрытиеФормыОбработки", , "Проверка закрытие формы");
КонецПроцедуры

// } интерфейс тестирования

&НаКлиенте
Процедура ДеструкторСценария() Экспорт 
	
	КонсольКода.Модифицированность = Ложь;
	КонсольКода.Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьОткрытиеФормыОбработки() Экспорт 
	Сообщить("Шаг 0");	
	
	//ПоказатьПредупреждение(, "1", 1);	
	Ожидаем.Что(КонсольКода.Открыта(), "Форма консоли открыта").Равно(Истина);
	
	КонсольКода.ОбновитьОтображениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьЗакрытиеФормыОбработки() Экспорт 
	
	Сообщить("Шаг 0 Закрытие");	
	КонсольКода.Закрыть();

	Ожидаем.Что(КонсольКода.Открыта(), "Форма консоли закрыта").Равно(Ложь);
	
КонецПроцедуры


&НаКлиенте
Процедура ТестДолжен_Проверить_ТекущаяСтрокаВыбрата() Экспорт 
	Сообщить("Шаг 2");	
	Ожидаем.Что(КонсольКода.Элементы.Настройки_Дерево.ТекущиеДанные.Ключ, "Инициированы параметры текущей настройки").Не_().Равно(0);
	Ожидаем.Что(КонсольКода.ПараметрыТекущейНастройки, "Инициированы параметры текущей настройки").Существует();
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_УстановкуТекстаЗапроса() Экспорт 
	Сообщить("Шаг 1");	
	
	КонсольКода.ВыбраннаяНастройка_Текст.УстановитьТекст("ВЫБРАТЬ 1 Значение");
	Ожидаем.Что(КонсольКода.СохранитьДанныеНастройки(), "Текст запроса установлен").Равно(Истина);
	Ожидаем.Что(КонсольКода.ДанныеНастройки(КонсольКода.ПараметрыТекущейНастройки).Текст, "Текст запроса установлен").Равно("ВЫБРАТЬ 1 Значение");
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_ВыполнениеЗапроса(Результат) Экспорт 
	Сообщить("Шаг 3");	

	КонсольКода.ВыполнитьКоманду("Выполнить");
	
	Ожидаем.Что(КонсольКода.РезультатТаблица.Количество()).Равно(1)
		.Что(КонсольКода.РезультатТаблица[0].Значение).Равно(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_Настройки_ДобавитьСкрипт() Экспорт 

	КонсольКода.ВыполнитьКоманду("Настройки_ДобавитьСкрипт");
	
	Ожидаем.Что(КонсольКода.Настройки_Дерево.ПолучитьЭлементы().Количество()).Равно(2)
		.Что(КонсольКода.Настройки_Дерево.ПолучитьЭлементы()[1].Тип).Равно(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_ВыполнитьСкрипт() Экспорт 

	КонсольКода.ВыбраннаяНастройка_Текст.УстановитьТекст(
	"Результат = Новый ТаблицаЗначений; 
	|Результат.Колонки.Добавить(""Значение"", новый ОписаниеТипов(""Число""));
	|Результат.Добавить().Значение = 2;");
	
	КонсольКода.ВыполнитьКоманду("Выполнить");
	
	Ожидаем.Что(КонсольКода.РезультатТаблица.Количество()).Равно(1)
		.Что(КонсольКода.РезультатТаблица[0].Значение).Равно(2);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_Настройки_ДобавитьЗапрос() Экспорт 

	КонсольКода.ВыполнитьКоманду("Настройки_ДобавитьЗапрос");
	
	Ожидаем.Что(КонсольКода.Настройки_Дерево.ПолучитьЭлементы().Количество()).Равно(3)
		.Что(КонсольКода.Настройки_Дерево.ПолучитьЭлементы()[2].Тип).Равно(0);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_ИзвлечьПараметры() Экспорт 

	КонсольКода.ВыбраннаяНастройка_Текст.УстановитьТекст("ВЫБРАТЬ &Параметр КАК Значение");
	
	КонсольКода.ВыполнитьКоманду("Параметры_Заполнить");
	
	Ожидаем.Что(КонсольКода.ВыбраннаяНастройка_Параметры.Количество()).Равно(1)
		.Что(КонсольКода.ВыбраннаяНастройка_Параметры[0].ИмяПараметра).Равно("Параметр");
	
	КонсольКода.ВыбраннаяНастройка_Параметры[0].ЗначениеПараметра = 3;
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_ВыводСпискаВременныхТаблиц() Экспорт 

	КонсольКода.ВыбраннаяНастройка_Текст.УстановитьТекст(
	"ВЫБРАТЬ
	|	1 КАК Поле1
	|ПОМЕСТИТЬ ВТ1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	2 КАК Поле1
	|ПОМЕСТИТЬ ВТ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ2.Поле1 КАК Поле1
	|ИЗ
	|	ВТ2 КАК ВТ2");
	
	КонсольКода.ВыполнитьКоманду("Выполнить");
	
	Ожидаем.Что(КонсольКода.Результат_ВременныеТаблицы.Количество()).Равно(4)
		.Что(КонсольКода.Результат_ВременныеТаблицы[0].Имя).Равно("ВТ1")
		.Что(КонсольКода.Результат_ВременныеТаблицы[1].Имя).Равно("ВТ2")
		.Что(КонсольКода.Результат_ВременныеТаблицы[2].Имя).Равно("~ВТ1")
		.Что(КонсольКода.Результат_ВременныеТаблицы[3].Имя).Равно("Запрос 4");
		
КонецПроцедуры

// { блок юнит-тестов - сами тесты


