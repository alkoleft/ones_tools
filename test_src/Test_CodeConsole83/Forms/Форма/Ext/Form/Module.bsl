&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Ожидаем;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем КонсольКода;

// { интерфейс тестирования

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	
	ФайлЭтойОбработки = Новый Файл(ЭтаФорма.ПутьКФайлуПолный);
	
	КонтекстЯдра.ПодключитьВнешнююОбработку(Новый Файл(ФайлЭтойОбработки.Путь + "\CodeConsole83.epf"));
	
	КонсольКода = ОткрытьФорму("ВнешняяОбработка.CodeConsole83.Форма.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.НачатьГруппу("Функции начала работы", Истина);
	
	НаборТестов.Добавить("ТестДолжен_ПроверитьОткрытиеФормыОбработки", , "Проверка открытие формы");
	НаборТестов.Добавить("ТестДолжен_ПроверитьЗакрытиеФормыОбработки", , "Проверка закрытие формы");
	
	#Область Базовые_функции
	
	НаборТестов.НачатьГруппу("Функции выполнение базовых функций", Истина);
	
	НаборТестов.Добавить("ТестДолжен_ПроверитьОткрытиеФормыОбработки", , "Проверка открытие формы");
	НаборТестов.Добавить("ТестДолжен_Проверить_Настройки_ДобавитьЗапрос", , "Проверка добавить запрос");
	НаборТестов.Добавить("ТестДолжен_Проверить_УстановкуТекстаЗапроса", , "Проверка установить текст запроса");
	НаборТестов.Добавить("ТестДолжен_Проверить_ТекущаяСтрокаВыбрата", , "Проверка текущая строка выбрана");
	НаборТестов.Добавить("ТестДолжен_Проверить_ВыполнениеЗапроса", , "Проверка выполнить запрос").Параметры.Добавить(1);
	
	
	НаборТестов.Добавить("ТестДолжен_Проверить_Настройки_ДобавитьСкрипт", , "Проверка добавить скрипт");
	НаборТестов.Добавить("ТестДолжен_Проверить_ВыполнитьСкрипт", , "Проверка выполнить скрипт");
	
	НаборТестов.Добавить("ТестДолжен_Проверить_Настройки_ДобавитьЗапрос", , "Проверка добавить запрос");
	НаборТестов.Добавить("ТестДолжен_Проверить_ИзвлечьПараметры", , "Проверка извлечь параметры запроса");
	НаборТестов.Добавить("ТестДолжен_Проверить_ВыполнениеЗапроса", , "Проверка выполнить запрос").Параметры.Добавить(3);
	
	НаборТестов.Добавить("ТестДолжен_Проверить_ВыводСпискаВременныхТаблиц", , "Проверка вывод списка временных таблиц");
	
	НаборТестов.ДобавитьДеструктор("ДеструкторСценария", "Обязательное завершение сценария");
	#КонецОбласти //Базовые_функции
	
	#Область Настройки
	
	НаборТестов.НачатьГруппу("Функции работы с настройками", Истина);
	
	НаборТестов.Добавить("ТестДолжен_Проверить_Настройки_ЗапускБезНастроек", , "Запуск без настроек");
	НаборТестов.Добавить("ТестДолжен_Проверить_Настройки_ЗагрузкаНастройки", , "Загрузка настройки ""Настройки1""").Параметры.Добавить("Настройки1");
	НаборТестов.Добавить("ТестДолжен_Проверить_Настройки_ЗагрузкаНастройки", , "Загрузка другой настройки ""Настройки2""").Параметры.Добавить("Настройки2");
	НаборТестов.Добавить("ТестДолжен_Проверить_Настройки_СозданиеНовойНастройки", , "Создание новой настройки");
	НаборТестов.Добавить("ТестДолжен_Проверить_Настройки_СохраниниеНастройки", , "Сохраниние настройки");
	НаборТестов.Добавить("ТестДолжен_Проверить_Настройки_ЗагрузкаНастройкиФайлНеСуществует", , "Загрузка настройки файл не найден");
	НаборТестов.Добавить("ТестДолжен_Проверить_Настройки_ЗагрузкаНастройкиНеКорректнаяСтруктура", , "Загрузка настройки не корректная структура");
	
	НаборТестов.ДобавитьДеструктор("ДеструкторСценария", "Обязательное завершение сценария");
	
	#КонецОбласти // Настройки	
	
	#Область Варианты_запросов
	НаборТестов.НачатьГруппу("Функции проверки обработки запросов", Истина);
	
	НаборТестов.Добавить("ТестДолжен_Проверить_Настройки_ДобавитьЗапрос", , "Проверка добавить запрос");
	Тест = НаборТестов.Добавить("ТестДолжен_Проверить_ВыполнениеПроизвольногоЗапроса", , "Проверка выполнения запроса ""ВЫБРАТЬ 1 КАК Значение""");
	Тест.Параметры.Добавить("ВЫБРАТЬ 1 КАК Значение");
	Тест.Параметры.Добавить(1);
	
	Тест = НаборТестов.Добавить("ТестДолжен_Проверить_ВыполнениеПроизвольногоЗапроса", , "Проверка выполнения запроса ""ВЫБРАТЬ ДАТАВРЕМЯ(2017,09,01) КАК Значение""");
	Тест.Параметры.Добавить("ВЫБРАТЬ ДАТАВРЕМЯ(2017,09,01) КАК Значение");
	Тест.Параметры.Добавить('20170901');
	
	Тест = НаборТестов.Добавить("ТестДолжен_Проверить_ВыполнениеПроизвольногоЗапроса", , "Проверка выполнения запроса ""ВЫБРАТЬ ""1"" КАК Значение""");
	Тест.Параметры.Добавить("ВЫБРАТЬ ""1"" КАК Значение");
	Тест.Параметры.Добавить("1");
	
	Тест = НаборТестов.Добавить("ТестДолжен_Проверить_ВыполнениеПроизвольногоЗапроса", , "Проверка выполнения запроса ""ВЫБРАТЬ 2 КАК Значение ПОМЕСТИТЬ ВТ1""");
	Тест.Параметры.Добавить("ВЫБРАТЬ 2 КАК Значение ПОМЕСТИТЬ ВТ1");
	Тест.Параметры.Добавить(2);
	
	НаборТестов.ДобавитьДеструктор("ДеструкторСценария", "Обязательное завершение сценария");
	#КонецОбласти // Варианты_запросов
	
	#Область Запросы_с_параметрами
	
	НаборТестов.НачатьГруппу("Запросы с параметрами", Истина);
	
	НаборТестов.Добавить("ТестДолжен_ПроверитьОткрытиеФормыОбработки", , "Проверка открытие формы");
	НаборТестов.ДобавитьДеструктор("ДеструкторСценария", "Обязательное завершение сценария");
	#КонецОбласти //Запросы_с_параметрами
	
	#Область Алгоритмы_с_параметрами
	
	НаборТестов.НачатьГруппу("Алгоритмы с параметрами", Истина);
	
	НаборТестов.Добавить("ТестДолжен_ПроверитьОткрытиеФормыОбработки", , "Проверка открытие формы");
	НаборТестов.ДобавитьДеструктор("ДеструкторСценария", "Обязательное завершение сценария");
	
	#КонецОбласти //Алгоритмы_с_параметрами
	
КонецПроцедуры

// } интерфейс тестирования

&НаКлиенте
Процедура ДеструкторСценария() Экспорт 
	
	КонсольКода.Модифицированность = Ложь;
	КонсольКода.Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьОткрытиеФормыОбработки() Экспорт 
	
	//ПоказатьПредупреждение(, "1", 1);	
	Ожидаем.Что(КонсольКода.Открыта(), "Форма консоли открыта").Равно(Истина);
	
	КонсольКода.ОбновитьОтображениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьЗакрытиеФормыОбработки() Экспорт 
	
	Сообщить("Шаг 0 Закрытие");	
	КонсольКода.Закрыть();

	Ожидаем.Что(КонсольКода.Открыта(), "Форма консоли закрыта").Равно(Ложь);
	
КонецПроцедуры


&НаКлиенте
Процедура ТестДолжен_Проверить_ТекущаяСтрокаВыбрата() Экспорт 
	Сообщить("Шаг 2");	
	Ожидаем.Что(КонсольКода.Элементы.Настройки_Дерево.ТекущиеДанные.Ключ, "Инициированы параметры текущей настройки").Не_().Равно(0);
	Ожидаем.Что(КонсольКода.ПараметрыТекущейНастройки, "Инициированы параметры текущей настройки").Существует();
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_УстановкуТекстаЗапроса() Экспорт 
	Сообщить("Шаг 1");	
	
	Ожидаем.Что(КонсольКода.УстановитьТекст("ВЫБРАТЬ 1 Значение"), "Текст запроса установлен").Равно(Истина);
	Ожидаем.Что(КонсольКода.ДанныеНастройки(КонсольКода.ПараметрыТекущейНастройки).Текст, "Текст запроса корректен").Равно("ВЫБРАТЬ 1 Значение");
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_ВыполнениеЗапроса(Результат) Экспорт 
	Сообщить("Шаг 3");	

	КонсольКода.ВыполнитьКоманду("Выполнить");
	
	Ожидаем.Что(КонсольКода.РезультатТаблица.Количество()).Равно(1)
		.Что(КонсольКода.РезультатТаблица[0].Значение).Равно(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_ВыполнениеПроизвольногоЗапроса(ТекстЗапроса, Результат) Экспорт 
	
	КонсольКода.УстановитьТекст(ТекстЗапроса);
	
	КонсольКода.ВыполнитьКоманду("Выполнить");
	
	Ожидаем.Что(КонсольКода.РезультатТаблица.Количество()).Равно(1)
		.Что(КонсольКода.РезультатТаблица[0].Значение).Равно(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_Настройки_ДобавитьСкрипт() Экспорт 

	КонсольКода.ВыполнитьКоманду("Настройки_ДобавитьСкрипт");
	
	Ожидаем.Что(КонсольКода.Настройки_Дерево.ПолучитьЭлементы().Количество()).Равно(2)
		.Что(КонсольКода.Настройки_Дерево.ПолучитьЭлементы()[1].Тип).Равно(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_ВыполнитьСкрипт() Экспорт 

	КонсольКода.УстановитьТекст(
	"Результат = Новый ТаблицаЗначений; 
	|Результат.Колонки.Добавить(""Значение"", новый ОписаниеТипов(""Число""));
	|Результат.Добавить().Значение = 2;");
	
	КонсольКода.ВыполнитьКоманду("Выполнить");
	
	Ожидаем.Что(КонсольКода.РезультатТаблица.Количество()).Равно(1)
		.Что(КонсольКода.РезультатТаблица[0].Значение).Равно(2);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_Настройки_ДобавитьЗапрос() Экспорт 

	КонсольКода.ВыполнитьКоманду("Настройки_ДобавитьЗапрос");
	
	Количество = КонсольКода.Настройки_Дерево.ПолучитьЭлементы().Количество();
	
	Ожидаем.Что(КонсольКода.Настройки_Дерево.ПолучитьЭлементы()[Количество - 1].Тип).Равно(0);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_ИзвлечьПараметры() Экспорт 

	КонсольКода.УстановитьТекст("ВЫБРАТЬ &Параметр КАК Значение");
	
	КонсольКода.ВыполнитьКоманду("Параметры_Заполнить");
	
	Ожидаем.Что(КонсольКода.ВыбраннаяНастройка_Параметры.Количество()).Равно(1)
		.Что(КонсольКода.ВыбраннаяНастройка_Параметры[0].ИмяПараметра).Равно("Параметр");
	
	КонсольКода.ВыбраннаяНастройка_Параметры[0].ЗначениеПараметра = 3;
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_ВыводСпискаВременныхТаблиц() Экспорт 

	КонсольКода.УстановитьТекст(
	"ВЫБРАТЬ
	|	1 КАК Поле1
	|ПОМЕСТИТЬ ВТ1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	2 КАК Поле1
	|ПОМЕСТИТЬ ВТ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ2.Поле1 КАК Поле1
	|ИЗ
	|	ВТ2 КАК ВТ2");
	
	КонсольКода.ВыполнитьКоманду("Выполнить");
	
	Ожидаем.Что(КонсольКода.Результат_ВременныеТаблицы.Количество()).Равно(4)
		.Что(КонсольКода.Результат_ВременныеТаблицы[0].Имя).Равно("ВТ1")
		.Что(КонсольКода.Результат_ВременныеТаблицы[1].Имя).Равно("ВТ2")
		.Что(КонсольКода.Результат_ВременныеТаблицы[2].Имя).Равно("~ВТ1")
		.Что(КонсольКода.Результат_ВременныеТаблицы[3].Имя).Равно("Запрос 4");
		
КонецПроцедуры

#Область Настройки

&НаКлиенте
Процедура ТестДолжен_Проверить_Настройки_ЗапускБезНастроек() Экспорт 

	КонсольКода = ПолучитьФорму("ВнешняяОбработка.CodeConsole83.Форма.Форма");
	КонсольКода.ИмяФайлаНастроек = Неопределено;
	КонсольКода.Открыть();
	
	Ожидаем.Что(КонсольКода.Открыта(), "Форма консоли открыта").Равно(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_Настройки_ЗагрузкаНастройки(ИмяМакета) Экспорт 

	ТД = ПолучитьМакет(ИмяМакета);
	
	ИмяФайла = ПолучитьИмяВременногоФайла("sel");
	ТД.Записать(ИмяФайла);
	
	РезультатОперации = КонсольКода.ЗагрузитьНастройкиИзФайла(ИмяФайла);
	
	УдалитьФайлы(ИмяФайла);
	
	Ожидаем.Что(РезультатОперации).Равно(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_Настройки_СозданиеНовойНастройки() Экспорт 

	РезультатОперации = КонсольКода.НоваяНастройка();
		
	Ожидаем.Что(РезультатОперации).Равно(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_Настройки_СохраниниеНастройки() Экспорт 

	ИмяФайла = ПолучитьИмяВременногоФайла(ИмяФайла);
	РезультатОперации = КонсольКода.СохранитьНастройкуВФайл(ИмяФайла);
	УдалитьФайлы(ИмяФайла);
		
	Ожидаем.Что(РезультатОперации).Равно(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_Настройки_ЗагрузкаНастройкиФайлНеСуществует() Экспорт 

	РезультатОперации = КонсольКода.ЗагрузитьНастройкиИзФайла(ПолучитьИмяВременногоФайла("sel"));
		
	Ожидаем.Что(РезультатОперации).Равно(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_Настройки_ЗагрузкаНастройкиНеКорректнаяСтруктура() Экспорт 

	
	ТД = Новый ТекстовыйДокумент;
	ТД.ДобавитьСтроку("Здесь не корректные настройки");
	ТД.ДобавитьСтроку("Здесь не корректные настройки");
	
	ИмяФайла = ПолучитьИмяВременногоФайла("sel");
	ТД.Записать(ИмяФайла);
	
	РезультатОперации = КонсольКода.ЗагрузитьНастройкиИзФайла(ПолучитьИмяВременногоФайла("sel"));
		
	УдалитьФайлы(ИмяФайла);
	
	Ожидаем.Что(РезультатОперации).Равно(Ложь);
	
КонецПроцедуры

#КонецОбласти // Настройки

#Область Служебные_методы

&НаСервере
Функция ПолучитьМакет(ИмяМакета)
	
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет(ИмяМакета);
	
КонецФункции

#КонецОбласти // Служебные_методы
// { блок юнит-тестов - сами тесты


